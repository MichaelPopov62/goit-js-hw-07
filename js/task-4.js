'use strict';
//отримую посилання в HTML-елемент із класом login-form
  const form = document.querySelector('.login-form');

//використовую метод для обработки подіі на форме.ТУТ ця подія submit,він виконає цю функцію коли користувач натисне на кнопку"login" у формі.Параметр event - це об'єкт події, який містить інформацію про те яка подія сталася,на якому елементі.
//другий метод використовується для того щоб не перезавантажувалась сторінка,щоб можно було обрабляти данні
  form.addEventListener('submit', event => {
  event.preventDefault();

//отримую елементи форми через іх атрібут name
  const { email, password } = form.elements;

// Перевіряю, чи заповнені всі поля після очищення пробілів
//trim() - метод видаляє пробіли з початку і кінця рядка
//value - властивість, яка повертає значення елемента форми
    if (!email.value.trim() || !password.value.trim()) {
    
//виводжу попередження якщо не заповнене хочаб одне  поле
  alert('All form fields must be filled in');
      
//якщо поля порожні зупиняю функцію
  return;
  }
//створюю об'єкт із введеними даними
  const formData = {
    
//це введений текст, видаляю пробіли спочатку і в кінці
  email: email.value.trim(),

//це введений пароль, видаляю пробіли спочатку і в кінці
  password: password.value.trim(),
  };

// Виводжу об'єкт з введеними даними в консоль. тобто це те що вводить користувач
  console.log(formData);

//очистка значень полів форми з допомогою методу reset, після того як користувач натисне кнопку "login" і дані виведуться в консоль
  form.reset();
});
